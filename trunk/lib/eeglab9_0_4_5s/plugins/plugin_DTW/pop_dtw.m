function [EEGOUT COMMANDS] = pop_dtw(EEG, inargs)
% GUI window for DTW control

COMMANDS = ''; % this initialization ensure that the function will return something
% if the user press the cancel button
EEGOUT = EEG;
% display help if not enough arguments
% ------------------------------------
if nargin < 1
    help pop_dtw;
    return;
end;


if(nargin == 2)
    switch inargs
        case {'current_dataset','all_datasets'},
            % Push buttons that call for action
            gui_params = struct();
            gui_params.smoothing = get(findobj('tag','smoothing'), 'value');
            gui_params.figure_name = get(findobj('tag','figure_name'),'string');
            gui_params.invert_polarity = get(findobj('tag','invert_polarity'), 'value');
            gui_params.weights = str2double(get(findobj('tag','weights'), 'string'));
            gui_params.include_non_dtwed_data = get(findobj('tag','include_non_dtwed_data'), 'value');
            gui_params.data_zero = get(findobj('tag','data_zero'), 'value');
            gui_params.data_save = get(findobj('tag','data_save'), 'value');
            gui_params.data_display = get(findobj('tag','data_display'), 'value');
            gui_params.data_name = get(findobj('tag','data_name'), 'string');
            gui_params.smoothing = str2double(get(findobj('tag','smoothing'), 'string'));
            gui_params.p_limit = str2double(get(findobj('tag','p_limit'), 'string'));
            gui_params.d_limit = str2double(get(findobj('tag','d_limit'), 'string'));
            gui_params.type = inargs;
            warping(EEG, gui_params);
        otherwise,
            error('Input parameter unrecognised, consult help or use GUI');
    end;
    
else       
    % Definition of window geometry
    
    geom = { ...        
        1 ...                                   % Warning
        1 ...
        [0.2 0.6 0.2]...                        % Current dataset
        1 ...
        [0.2 0.6 0.2]...                        % All datasets
        1 ...                                   % Settings
        1 ...                                   % | 'What to do...'
        [0.25 0.15 0.60] ...                    % | Smoothing
        [0.25 0.15 0.60] ...                    % | Point drift
        [0.25 0.15 0.60] ...                    % | Diagonal drift
        [0.25 0.15 0.60] ...                    % | Weigths
        1 ...            
        [0.2 0.15 0.25 ] ...                    % | Display
        1 ...            
        [0.2 0.15 0.25 ] ...                    % | 
        [0.15 0.15 0.15 ] ...                   % |
        };
    
    
    % Definition of window elements
    uilist = { ... 
        { 'style', 'text', 'string', 'Warning: do not open multiple instances of this window, it may cause failure of the program.' 'fontweight' 'bold'}, ...
        ...
        { }...     
        ...
        { 'style', 'text', 'string', 'Current dataset' 'fontweight' 'bold'}, ...
        { 'style', 'text', 'string', '(calculates one average signal from all epochs and channels)' }, ...
        { 'style', 'pushbutton' , 'string', 'Calculate', 'callback', 'pop_dtw(EEG,''current_dataset'');' }...
        ...
        { }...        
        { 'style', 'text', 'string', 'All datasets' 'fontweight' 'bold'}, ...
        { 'style', 'text', 'string', '(calculates average for each epoch from all channels)' }, ...
        { 'style', 'pushbutton' , 'string', 'Calculate','callback', 'pop_dtw(EEG,''all_datasets'');' }...
        ...
        { },...       
        { 'style', 'text', 'string', 'Settings' 'fontweight' 'bold' }, ...
        ...
        { 'style', 'text', 'string', 'Base data smoothing' }, ...
        { 'style', 'edit', 'string', '1', 'tag', 'smoothing' }, ...
        { 'style', 'text', 'string', '(Recommended value: 1% - 10% of data points count; 1 = no smoothing)' }, ...
        ...
        { 'style', 'text', 'string', 'Point drift limit' }, ...
        { 'style', 'edit', 'string', '1', 'tag', 'p_limit' }, ...
        { 'style', 'text', 'string', '(Recommended value: 1..3, 0 = no warping)' }, ...
        ...
        { 'style', 'text', 'string', 'Diagonal drift limit' }, ...
        { 'style', 'edit', 'string', '100', 'tag', 'd_limit' }, ...
        { 'style', 'text', 'string', '(Recommended value: 5% - 30% of data points count; 1 = no warping)' }, ...
        ...
        { 'style', 'text', 'string', 'Weigths [value differential]' }, ...
        { 'style', 'edit', 'string', '0.5 0.5', 'tag', 'weights' }, ...
        { 'style', 'text', 'string', '(Recommended weights: [0,5 0,5], [1 0] = only absolute value)' }, ...
        ...
        { },...       
        ...
        { 'style', 'checkbox', 'string', 'Save as new dataset', 'tag', 'data_save', 'value', 0}, ...
        { 'style', 'text', 'string', 'Dataset name'}, ...
        { 'style', 'edit', 'string', [EEG.setname ' - DTW'], 'tag', 'data_name' }, ...
        ...
        { },...     
        ...
        { 'style', 'checkbox', 'string', 'Display', 'tag', 'data_display', 'value', 1}, ...
        { 'style', 'text', 'string', 'Figure name'}, ...
        { 'style', 'edit', 'string', EEG.setname, 'tag', 'figure_name' }, ...
        ...
        { 'style', 'checkbox', 'string', 'Invert polarity (''ERP View'')', 'tag', 'invert_polarity', 'value', 1}, ...
        { 'style', 'checkbox', 'string', 'Include non-DTWed data', 'tag', 'include_non_dtwed_data', 'value', 1}, ...
        { 'style', 'checkbox', 'string', 'Display zero-axes', 'tag', 'data_zero', 'value', 1}, ...
        };
    
    % And here we go with the window
    supergui( 'title', 'Grand Average','geomhoriz', geom, 'uilist',  uilist);
end
return;



